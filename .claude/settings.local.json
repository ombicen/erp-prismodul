{
  "permissions": {
    "allow": [
      "Bash(dir)",
      "Bash(dir supabase)",
      "Bash(supabase --version)",
      "Bash(npm install -g supabase)",
      "Bash(dir supabase /s)",
      "Bash(scoop --version)",
      "Bash(docker --version)",
      "Bash(psql --version)",
      "Bash(where psql)",
      "Bash(npm install prisma @prisma/client)",
      "Bash(npx prisma init)",
      "Bash(npx prisma generate)",
      "Bash(npm uninstall @supabase/supabase-js)",
      "Bash(del \"c:\\Users\\onurg\\Documents\\companies\\erpprismodul\\src\\lib\\supabase.ts\")",
      "Bash(npm run typecheck)",
      "Bash(npm install next@latest react@latest react-dom@latest)",
      "Bash(npm install --save-dev @types/node)",
      "Bash(npm install lucide-react@latest --legacy-peer-deps)",
      "Bash(npm uninstall vite @vitejs/plugin-react eslint-plugin-react-refresh)",
      "Bash(npm install --save-dev eslint-config-next)",
      "Bash(npm run dev)",
      "Bash(taskkill /F /IM node.exe)",
      "Bash(npm install ag-grid-react ag-grid-community)",
      "Bash(npm uninstall ag-grid-react ag-grid-community)",
      "Bash(npm install @silevis/reactgrid)",
      "Bash(npm install @silevis/reactgrid --legacy-peer-deps)",
      "Bash(cat \"c:\\Users\\onurg\\Documents\\companies\\erpprismodul\\src\\components\\SpreadsheetGrid.tsx\")",
      "Bash(npx prisma migrate dev --name add_contract_campaign_exclusion)",
      "Bash(npx prisma migrate reset --force)",
      "Bash(set PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=ja)",
      "Bash($env:PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"ja\")",
      "Bash(npx prisma migrate dev --create-only --name add_supplier_pricing)",
      "Bash(npx prisma migrate dev --name add_supplier_pricing)",
      "Bash(npx prisma migrate reset --force --skip-seed)",
      "Bash(del nul)",
      "Bash(git add -A -- .)",
      "Bash(npx prisma migrate dev --name add_paslag_and_product_fields)",
      "Bash(set PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=yes)",
      "Bash($env:PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"yes\")",
      "Bash(export PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"yes\")",
      "Bash(npm install --save-dev tsx)",
      "Bash(npm install --save-dev tsx --legacy-peer-deps)",
      "Bash(npm run db:seed)",
      "Bash(npx prisma migrate dev --name rename_paslag_to_surcharge)",
      "Bash(npx prisma migrate dev --create-only --name rename_paslag_to_surcharge)",
      "Bash(npx prisma migrate resolve --applied 20251021104400_rename_paslag_to_surcharge)",
      "Bash(psql -U postgres -d erpprismodul -f \"prisma/migrations/20251021104400_rename_paslag_to_surcharge/migration.sql\")",
      "Bash(cat \"prisma/migrations/20251021104400_rename_paslag_to_surcharge/migration.sql\")",
      "Bash(npx prisma db execute --stdin)",
      "Bash(npx prisma db execute --schema=prisma/schema.prisma --stdin)",
      "Bash(Get-Content \"c:\\Users\\XPS\\Documents\\companies\\alexum\\erpprismodul\\.next\\server\\app\\api\\products\\[id]\\surcharges\\route.js\" -ErrorAction SilentlyContinue)",
      "Bash(Select-Object -First 20)",
      "Bash(npx prisma migrate:*)",
      "Bash(psql:*)",
      "Bash(rm:*)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"yes\" npx prisma migrate reset:*)",
      "Bash(curl:*)",
      "Bash(timeout /t 5 /nobreak)"
    ],
    "deny": [],
    "ask": []
  }
}
